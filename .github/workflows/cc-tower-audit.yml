name: CC Tower Audit (quick)

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate quick audit report
        run: |
          set -e
          mkdir -p cc-tower-audit
          FILES=$(git ls-files | wc -l | tr -d " ")
          if [ -d app ] || [ -d src/app ]; then ROUTER=app;
          elif [ -d pages ] || [ -d src/pages ]; then ROUTER=pages;
          else ROUTER=unknown; fi
          NEXT=$(node -e "try{const p=require(\"./package.json\");console.log(p.dependencies?.next||p.devDependencies?.next||\"\")}catch{}")
          {
            echo "# CC Tower Quick Audit"
            echo
            echo "**Run:** $(date -u +%FT%TZ)"
            echo
            echo "## Project"
            echo "- Files tracked: ${FILES}"
            echo "- Router: **${ROUTER}**"
            [ -n "$NEXT" ] && echo "- Next.js: ${NEXT}" || true
            echo
            echo "## File tree (first 2000)"
            echo "```"
            (find -L . -path ./.git -prune -o -maxdepth 3 -print | sed "s#^\./##" | head -n 2000)
            echo "```"
          } > cc-tower-audit/cc-report.md
          tar --exclude=.git --exclude=node_modules --exclude=.next -czf cc-tower-audit/source-snapshot.tar.gz .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cc-tower-audit
          path: |
            cc-tower-audit/cc-report.md
            cc-tower-audit/source-snapshot.tar.gz

      - name: Job summary
        run: |
          echo "### CC Tower Audit (quick)" >> $GITHUB_STEP_SUMMARY
          echo "- Report and snapshot uploaded as artifact **cc-tower-audit**" >> $GITHUB_STEP_SUMMARY

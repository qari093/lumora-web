// ----------------------------
// ðŸŒŸ LUMORA DATABASE SCHEMA
// ----------------------------

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- Enums (must match existing DB) ---
enum RoomRole {
  HOST
  MODERATOR
  PARTICIPANT
}

enum EventType {
  JOIN
  LEAVE
  MUTE
  UNMUTE
  START_STREAM
  STOP_STREAM
  MESSAGE
  SCREEN_START
  SCREEN_STOP
  RAISE_HAND
  LOWER_HAND
}

// --- Core User model (used by classic Ledger) ---
model User {
  id          String    @id @default(cuid())
  username    String    @unique
  balance     Int       @default(0)
  ledgerTo    Ledger[]  @relation("ToUser")
  ledgerFrom  Ledger[]  @relation("FromUser")
  createdAt   DateTime  @default(now())
}

// --- ZENCOIN Ledger tied to User ---
model Ledger {
  id         String   @id @default(cuid())
  fromId     String
  toId       String
  amount     Int
  memo       String?
  createdAt  DateTime @default(now())

  from User  @relation("FromUser", fields: [fromId], references: [id])
  to   User  @relation("ToUser",   fields: [toId],   references: [id])

  @@index([toId, createdAt])
  @@index([fromId, createdAt])
}

// ======================
// ZenCoin (separate rails)
// ======================

model CoinAccount {
  id        String   @id @default(cuid())
  userId    String?  @unique
  balance   Int      @default(0)
  createdAt DateTime @default(now())

  txFrom    CoinTx[] @relation("FromAccount")
  txTo      CoinTx[] @relation("ToAccount")

  @@index([createdAt])
}

model CoinTx {
  id        String       @id @default(cuid())
  fromId    String?
  toId      String
  amount    Int
  memo      String?
  createdAt DateTime     @default(now())

  from      CoinAccount? @relation("FromAccount", fields: [fromId], references: [id])
  to        CoinAccount  @relation("ToAccount",   fields: [toId],   references: [id])

  @@index([toId, createdAt])
  @@index([fromId, createdAt])
}